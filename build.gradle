
task wmsJson(type:Exec){
    workingDir 'pipemock/trafo_sql/qgs_wms'
    commandLine './tojson.sh'
}

task printJson(type:Exec){
    workingDir 'pipemock/trafo_sql/qwc_print'
    commandLine './tojson.sh'
}

task wfsJson(type:Exec){
    workingDir 'pipemock/trafo_sql/qgs_wfs'
    commandLine './tojson.sh'
}

task down(type:Exec){
    workingDir 'qgs_clust'
    commandLine 'docker-compose','down'
    ignoreExitValue true
}

task wmsQgs(type:Exec){
    dependsOn wmsJson
    workingDir 'pipemock/jqgs'
    commandLine './toWmsQgs.sh'
}

task printQgs(type:Exec){
    dependsOn printJson
    workingDir 'pipemock/jqgs'
    commandLine './toPrintQgs.sh'
}

task wfsQgs(type:Exec){
    dependsOn wfsJson
    workingDir 'pipemock/jqgs'
    commandLine './toWfsQgs.sh'
}

task generatePerm(type:Exec){
    workingDir 'pipemock/trafo_sql/permission'
    commandLine './tojson.sh'
}

task _ogcPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/ogc"
}

task ogcJson(type:Exec, dependsOn:_ogcPerm){
    workingDir 'pipemock/trafo_sql/ogc-service'
    commandLine './tojson.sh'
}

task _infoPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/feat_info"
}

task featInfoJson(type:Exec, dependsOn:_infoPerm){
    workingDir 'pipemock/trafo_sql/feat_info'
    commandLine './tojson.sh'
}

task _legendPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/legend"
}

task legendJson(type:Exec, dependsOn:_legendPerm){
    workingDir 'pipemock/trafo_sql/legend'
    commandLine './tojson.sh'
}

task dataProdJson(type:Exec){
    workingDir 'pipemock/trafo_sql/dataprod'
    commandLine './tojson.sh'
}

task up(type:Exec){
    //dependsOn printQgs
    //dependsOn wfsQgs
    dependsOn down
    dependsOn wmsQgs
    //dependsOn ogcJson
    //dependsOn featInfoJson
    //dependsOn legendJson
    workingDir 'qgs_clust'
    commandLine 'docker-compose','up'
}
