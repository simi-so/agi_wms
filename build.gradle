def inBaseDir = '/home/bjsvwjek/code/pipelines/api_webgisclient/sql2json/templates'

def outBaseDir = projectDir.toString() + '/.gitignored/pipe_data'
def baseCmd = [
    'java', '-Dorg.slf4j.simpleLogger.defaultLogLevel=info', '-jar', projectDir.toString() + '/.gitignored/pipe_bin/sql2json/sql2json.jar',
    '-c', 'jdbc:postgresql://localhost:5433/simi',
    '-u', 'postgres', '-p', 'postgres'
]

task wmsJson(type:Exec){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/wms-qgs-content/_dev_template.json',
        '-o',  outBaseDir + '/qgs/qgs_wms.json', 
        '-s', 'https://github.com/simi-so/json2qgs/raw/master/schemas/sogis-wms-qgs-content.json'
        ]
}

task printJson(type:Exec){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/print-qgs-content/_dev_template.json',
        '-o',  outBaseDir + '/qgs/qwc_print.json', 
        '-s', 'https://github.com/simi-so/json2qgs/raw/master/schemas/sogis-wms-qgs-content.json'
        ]
}

task wfsJson(type:Exec){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/wfs-qgs-content/_dev_template.json',
        '-o',  outBaseDir + '/qgs/qgs_wfs.json', 
        '-s', 'https://github.com/simi-so/json2qgs/raw/master/schemas/sogis-wfs-qgs-content.json'
        ]
}

task wmsQgs(type:Exec){
    dependsOn wmsJson
    workingDir 'pipemock/jqgs'
    commandLine './toWmsQgs.sh'
}

task printQgs(type:Exec){
    dependsOn printJson
    workingDir 'pipemock/jqgs'
    commandLine './toPrintQgs.sh'
}

task wfsQgs(type:Exec){
    dependsOn wfsJson
    workingDir 'pipemock/jqgs'
    commandLine './toWfsQgs.sh'
}

task generatePerm(type:Exec){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/services-unified-permissions/_dev_template.json',
        '-o',  outBaseDir + '/multi/permissions.json', 
        '-s', 'https://github.com/qwc-services/qwc-services-core/raw/master/schemas/qwc-services-unified-permissions.json'
        ]
}

task _ogcPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/ogc"
}

task ogcJson(type:Exec, dependsOn:_ogcPerm){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/ogc-service/_dev_template.json',
        '-o',  outBaseDir + '/ogc/ogcConfig.json', 
        '-s', 'https://raw.githubusercontent.com/qwc-services/qwc-ogc-service/master/schemas/qwc-ogc-service.json'
        ]
}

task _infoPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/feat_info"
}

task featInfoJson(type:Exec, dependsOn:_infoPerm){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/feature-info-service/_dev_template.json',
        '-o',  outBaseDir + '/feat_info/featureInfoConfig.json', 
        '-s', 'https://raw.githubusercontent.com/qwc-services/qwc-feature-info-service/master/schemas/qwc-feature-info-service.json'
        ]
}

task _legendPerm(type:Copy, dependsOn:generatePerm){
    from "$projectDir/.gitignored/pipe_data/multi/permissions.json"
    into "$projectDir/.gitignored/pipe_data/legend"
}

task legendJson(type:Exec, dependsOn:_legendPerm){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/legend-service/_dev_template.json',
        '-o',  outBaseDir + '/legend/legendConfig.json', 
        '-s', 'https://github.com/qwc-services/qwc-legend-service/raw/master/schemas/qwc-legend-service.json'
        ]
}

task printSrvJson(type:Exec){
    commandLine baseCmd + [
        '-t',  inBaseDir + '/print-service/_dev_template.json',
        '-o',  outBaseDir + '/print/printConfig.json', 
        '-s', 'https://github.com/qwc-services/qwc-print-service/raw/master/schemas/qwc-print-service.json'
        ]
}

task down(type:Exec){
    workingDir 'qgs_clust'
    commandLine 'docker-compose','down'
    ignoreExitValue true
}

task up(type:Exec){
    dependsOn printQgs
    //dependsOn wfsQgs
    dependsOn down
    dependsOn wmsQgs
    dependsOn ogcJson
    dependsOn printSrvJson
    //dependsOn featInfoJson
    //dependsOn legendJson
    workingDir 'qgs_clust'
    commandLine 'docker-compose','up', '-V', 'postgis', 'qgs', 'ogc', 'print'
}
